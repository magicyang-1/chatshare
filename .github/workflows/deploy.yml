name: Spring Boot Maven CI/CD

on:
  push:
    branches:
      - main      # 每次推送 main 分支触发部署
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ 安装 JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # 3️⃣ 使用 Maven 构建项目
      - name: Build with Maven
        working-directory: FinalRelease/server/java-backend
        run: mvn clean package -DskipTests=true

      # 4️⃣ 上传打包结果作为 artifact（可选）
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ai-chat-backend
          path: target/*.jar

      # 5️⃣ 部署到 ECS（通过 SSH）
      - name: Deploy to ECS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          source: FinalRelease/server/java-backend/target/*.jar
          target: /root/app/

      - name: Verify upload
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          script: ls -lh /root/app

      # 6️⃣ 远程执行启动命令（在 ECS 上重启服务）
      - name: Restart Spring Boot on ECS
        uses: appleboy/ssh-action@master
        continue-on-error: true    # ✅ 忽略退出信号 143
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          script: |
            echo "Stopping old process..."
            pkill -f "ai-chat-backend.jar" || true
            echo "Starting new Spring Boot app..."
            cd /root/app
            setsid nohup java -jar /root/app/ai-chat-backend.jar > /root/app/server.log 2>&1 </dev/null &
            sleep 2
            echo "Deployment completed!"
            tail -n 20 /root/app/server.log || true
